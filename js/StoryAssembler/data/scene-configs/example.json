{
	"id" : "exampleScene",			//id of the scene used to sync up everywhere
	"characters" : [				//dynamic characters used in the scene
		{
			"id" : "protagonist",			//character id
			"avatarStates" : [		//state conditions (can be multiple) and their associated avatars to display when met
				{ "state": ["default"], "img": "assets/avatars/char3/char3_20s_neutral.png"},
				{ "state": ["tension gte 2"], "img": "assets/avatars/char3/char3_20s_disappointed.png"}
			],
			"properties" : {			//bespoke data for each character used in custom text templates
				"name": "Emma",
				"nickname" : "Em",
				"pronouns" : "she"
			}
		},
		{
			"id" : "friend1",			//character id
			"avatarStates" : [		//state conditions (can be multiple) and their associated avatars to display when met
				{ "state": ["default"], "img": "assets/avatars/char2/char2_20s_neutral.png"},
				{ "state": ["tension gte 2"], "img": "assets/avatars/char2/char2_20s_upset.png"}
			],
			"properties" : {			//bespoke data for each character used in custom text templates
				"name" : "Zanita",
				"nickname" : "Z",
				"pronouns" : "she"
			}
		},
		{
			"id" : "friend2",			//character id
			"avatarStates" : [		//state conditions (can be multiple) and their associated avatars to display when met
				{ "state": ["default"], "img": "assets/avatars/char7/char7_20s_neutral.png"},
				{ "state": ["tension gte 2"], "img": "assets/avatars/char1/char1_20s_disappointed.png"}
			],
			"properties" : {			//bespoke data for each character used in custom text templates
				"name" : "Shelly",
				"nickname" : "Shelly",
				"pronouns" : "she"
			}
		}
	],
	"wishlist" : [			//the state goals to be met in this scene
		{ "condition": "satiation gte 5", "order": "first", "persistent": true },		//game interrupt
		{ "condition": "establishFriends eq true"},
		{ "condition": "establishSettingDinner eq true"},
		{ "condition": "establishDefenseTomorrow eq true"},
		{ "condition": "EmmaDefenseFeeling eq true" },
		{ "condition": "EmmaJobFutureBeat eq true" },
		{ "condition": "EmmaClassTypeBeat eq true" },
		
		{ "condition": "friendIsInAcademia eq true" },
		{ "condition": "friendIsNotInAcademia eq true"},
		
		{ "condition": "tension gte 4"},
		{ "condition": "friendTensionRelieved eq true"},
		{ "condition": "checkinWithDisagreer eq true"},
		{ "condition": "inactivityIsBad eq true"},
		{ "condition": "outro eq true", "order": "last"},

		{
			"condition": "state: set areaOfExpertise [phytoplankton|lobsters|coral]",
			"label": "Expertise",
			"hoverText": "Which area is your area of specialty, in regards to climate change?"
		},
		{
			"condition": "state: set academicFriend [0-2:1]",
			"label": "# of Academic Friends",
			"hoverText": "How many of your friends are academics? (0 is low, 2 is high)",
			"changeFunc": "friendBackgroundBalance"
		},
		{
			"condition": "state: set activistFriend [0-2:1]",
			"label": "# of Activist Friends",
			"hoverText": "How many of your friends are activists? (0 is low, 2 is high)",
			"changeFunc": "friendBackgroundBalance"
		},
		{
			"condition": "state: set supportiveFriend [0-2:1]",
			"label": "# of Supportive Friends",
			"hoverText": "How many of your friends support your decision to go into academia? (0 is low, 2 is high)",
			"changeFunc": "friendSupportivenessBalance"
		},
		{
			"condition": "state: set challengingFriend [0-2:1]",
			"label": "# of Challenging Friends",
			"hoverText": "How many of your friends challenge your decision to go into academia? (0 is low, 2 is high)",
			"changeFunc": "friendSupportivenessBalance"
		}
	],
	"dataFiles" : [				//which data files to use in scene-content when assembling valid fragments for this scene
		"text!exampleData",
		"text!globalData"
	],
	"startState" : [				//starting state for the scene
		"set establishFriends false",
		"set establishSettingDinner false",
		"set establishDefenseTomorrow false",
		"set EmmaDefenseFeeling false",
		"set EmmaJobFutureBeat false",
		"set EmmaClassTypeBeat false",

		// new items
		"set establishFriend1Background false",
		"set establishFriend2Background false",
		"set establishFriend1Supportiveness false",
		"set establishFriend2Supportiveness false",
		// end new items
		"set friendTension 0",
		"set friendTensionRelieved false",
		"set checkinWithDisagreer false",
		"set inactivityIsBad false",
		"set outro false",

		// new items
		"set academicFriend1 true",
		"set activistFriend1 false",
		"set academicFriend2 false",
		"set activistFriend2 true",

		"set supportiveFriend1 true",
		"set challengingFriend1 false",
		"set supportiveFriend2 false",
		"set challengingFriend2 true",
		// end new items

		"set satiation 5",					//this is the game interfacing variable

		"set friend1Relationship 5",			//on a scale between 1 to 10 (1 bad, 10 best)
		"set friend2Relationship 5",		//on a scale between 1 to 10 (1 bad, 10 best)
		"set confidence 5",							//scale of 1 to 10, 10 highest
		"set academicEnthusiasm 5",					//scale of 1 to 10, 10 highest
		"set friendTension 0",						//scale of 1 to 10, ten is high tension
		"set tension 0"
	],
	"sceneBackground" : "assets/bgs/beach.png",		//background for the scene
	"UIvars" : [			//stats tracked on player avatars
		{
			"varName" : "satiation",
			"label" : "Satiation",
			"characters" : [],
			"affectedBy" : "both",
			"range" : [0,10]
		},
		{
			"varName" : "confidence",
			"label" : "Confidence",
			"characters" : ["protagonist"],
			"affectedBy" : "both",
			"range" : [0,10]
		},
		{
			"varName" : "academicEnthusiasm",
			"label" : "Academic Enthusiasm",
			"characters" : ["protagonist"],
			"affectedBy" : "narrative",
			"range" : [0,10]
		},
		{
			"varName" : "friend1Relationship",
			"label" : "Friendliness",
			"characters" : ["friend1"],
			"affectedBy" : "narrative",
			"range" : [0,10]
		},
		{
			"varName" : "friend2Relationship",
			"label" : "Friendliness",
			"characters" : ["friend2"],
			"affectedBy" : "narrative",
			"range" : [0,10]
		},
		{
			"varName" : "tension",
			"label" : "tension",
			"characters" : ["protagonist", "friend1", "friend2"],
			"affectedBy" : "both",
			"range" : [0,10]
		}
	],
	"mode" : {			//what mode dialogue exchange takes place in for the scene
		"type": "dialogue",		//can be dialogue or monologue
		"initiator": "friend1",
		"responder": "protagonist"
	},
	/*
		fallbackText: text to display if StoryAssembler encounters an error, but you don't want to stop the game (used primarily for "release mode")
		introText : text to display once the scene has begun, but before any scene text is displayed
		descriptionText: text to display on the timeline when players are selecting it
	*/
	"fallbackText" : "<p>The rest of the details are faded, but you remembered that your friends' support proved critical as you started your path as an academic.</p>",
	"introText" : "<p>It's the year 2025. You are Emma Richards, a PhD student finishing up your degree on the effects of climate change.</p><p>Tomorrow, you'll be defending your thesis. Your friends have decided to throw a dinner party for you.</p>",
	"descriptionText" : "<h3>Dinner With Friends</h3><p>You are Emma Richards, a PhD student who studies <span class='mutable'>shrimp</span>.</p><p>Tomorrow, you'll be defending your thesis. Your friends decided to throw a dinner party for you.</p><p><span class='mutable'>Were you able to field their questions, while still passing food around the table?</span></p><h3><a href='#' class='beginScene' id='begin-finalDinner'>Begin Scene</a></h3>"
}