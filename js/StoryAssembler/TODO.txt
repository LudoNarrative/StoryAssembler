
Macro (by July 9th)

- startState can't handle false as a value
- translate over all the scenes deterministically
- implement grammar-based changes based on variables (game interface)
- dynamic wishlist items (specialty: lobster)
- make versions of scenes with more variability

CURRENT TODO
- Possible bug in the case where we're recursing to find a subgoal that's the same as one of our wishlist goals. [Think about what happens in this case.]
- Research: ease of authoring (JSON editor, DSL, etc.)
- Defining ways in which content might be varied, i.e. formal vs informal, discussion vs monologue, defensive vs aggressive. [Rather than having static flags like "lecture scene", "dinner scene"]
	- Formal vs. informal. (based on speaker). Informal will add mix-ins establishing connection and loosening syntax.
		"Climate change is already having a very real impact on marine life. We might start to see major population drop-offs in the next decade."
		"Marsha, I have to tell you that climate change is already having a very real impact on marine life. You see? I mean, we might start to see major population drop-offs in the next decade. Pass the soup."
	- Aggressive: can be positive, neutral, negative. If negative, adds hedges and belief markers. If positive, adds aggressive insistence, markers of surety.
		Neutral: "Climate change is already having a very real impact on marine life. We will start to see major population drop-offs in the next decade."
		Negative: "I'm worried that climate change is already having a very real impact on marine life. It's possible we might start to see major population drop-offs in the next decade. At least, that's what I think."
		Positive: "Look, don't you get it? Climate change is already having a very real impact on marine life. It's beyond a shadow of a doubt that we will start to see major population drop-offs in the next decade. That's an undisputable fact."
	- Confident vs Unsure. Unsure adds hedges, weakens words.
		Confident: "Climate change is already having a very real impact on marine life. We will start to see major population drop-offs in the next decade."
		Unsure: "Climate change... uh, might be already having a very real impact on marine... er, marine life. We might start to see... excuse me, uhm... we might start to see major population drop-offs in the next... the next decade."
	- mixins:
		- Prediction: "{X,will} happen." --> "I think X will happen", "X might happen", "X will definitely happen."
		- {reassure}: --> "Are you with me?" "Right?" "Does that make sense?"
		

- Implementing the ability for mix-ins to satisfy wishlist items. [like using a mixin ShowPersonality satisfies a Want of "has shown personality"]

Future:
- If you have a chunk with a request (instead of content) which changes the conditions such that the original chunk matching that request can no longer appear, the system will show it anyway, when what it should do is some kind of replan (which might not find a matching chunk).
- When recursing down, should flag as an error if we have a chunk with choices that requests a chunk w/choices (or requests a chunk that requests a chunk w/choices, etc.)
- Replace flat max_depth with a dynamic heuristic that stops searching any path that has gone more than N nodes without satisfying a Want from the wishlist. (Ben's idea.)
- Weight a chunk with choices that can satisfy multiple wants higher than one that can only satisfy a single one.

Maintenance / Cleanup
- Fix commented out choiceDetails printing (two places)
- Research in unit tests: how to test properties of an object? If you check directly, it'll crash with a "cannot read property x of y." If you check that the object exists first, it just adds a failing test before the crash.




Done:
X Implement "persistent" for wishlists.
X Implement "order" for wishlists
X Implement a max_depth to speed up BestPath
X ON-screen debugging showing current wishlist, possibly chunk library too.
X Test that if a chunk has "request" instead of content, displaying it will jump forward until it finds something with content.
X Added an allowed "comment" field to chunks.
X Factor Display out of StoryAssembler (shouldn't depend on it)
X Add a "repeatable" field to chunks: if false, removes from ChunkLibrary after displaying.
X Lines of dialog being said by particular speakers, who can have attributes that might affect mix-ins, etc
X Effects that make incremental progress towards goals. I.e. the request is "x gt 5" and an effect of "incr x 1" when x is 2
